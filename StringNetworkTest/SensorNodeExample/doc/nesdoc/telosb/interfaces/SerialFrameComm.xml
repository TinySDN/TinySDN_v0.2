<?xml version="1.0" encoding="utf-8"?><interfacedef loc="47:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc" nicename="SerialFrameComm" qname="SerialFrameComm">
      <documentation loc="34:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc">
        <short>

 This interface sits between a serial byte encoding component and a
 framing/packetizing component.</short>
        <long>

 This interface sits between a serial byte encoding component and a
 framing/packetizing component. It is to be used with framing protocols
 that place delimiters between frames. This interface separates the tasks
 of interpreting and coding delimiters and escape bytes from the rest of
 the wire protocol.

 @author Philip Levis
 @author Ben Greenstein
 @date   August 7 2005
</long>
      </documentation>
      <function command="" loc="56:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc" name="putDelimiter" provided="0" ref="0x2b610711e940">
        <documentation loc="48:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc">
          <short>
 Used by the upper layer to request that an interframe delimiter
 be sent.</short>
          <long>
 Used by the upper layer to request that an interframe delimiter
 be sent. The lower layer is responsible for the determining the
 actual byte(s) that must be sent to delimit the frame.
 @return Returns a error_t code that indicates if the lower layer
 was able to put an interframe delimiter to serial (SUCCESS) or
 not (FAIL).
</long>
        </documentation>
        <interfacedef-ref nicename="SerialFrameComm" qname="SerialFrameComm"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b610586f980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="72:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc" name="resetSend" provided="0" ref="0x2b610711dd60">
        <documentation loc="67:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc">
          <short>
 Requests that any underlying state associated with send-side frame
 delimiting or escaping be reset.</short>
          <long>
 Requests that any underlying state associated with send-side frame
 delimiting or escaping be reset. Used to initialize the lower
 layer's send path and/or cancel a frame mid-transmission.
</long>
        </documentation>
        <interfacedef-ref nicename="SerialFrameComm" qname="SerialFrameComm"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" loc="94:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc" name="dataReceived" provided="0" ref="0x2b610711aab0">
        <documentation loc="87:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc">
          <short>
 Signals the upper layer that a byte of data has been received
 from the serial connection.</short>
          <long>
 Signals the upper layer that a byte of data has been received
 from the serial connection. It passes this byte as a function
 parameter.  
 @param data The byte of data that has been received
 from the serial connection
</long>
        </documentation>
        <interfacedef-ref nicename="SerialFrameComm" qname="SerialFrameComm"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b6104f08160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="94:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc" name="data" ref="0x2b610711a830">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b6104f08160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="79:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc" name="resetReceive" provided="0" ref="0x2b610711c6a0">
        <documentation loc="74:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc">
          <short>
 Requests that any underlying state associated with receive-side
 frame or escaping be reset.</short>
          <long>
 Requests that any underlying state associated with receive-side
 frame or escaping be reset. Used to initialize the lower layer's
 receive path and/or cancel a frame mid-reception when sync is lost.
</long>
        </documentation>
        <interfacedef-ref nicename="SerialFrameComm" qname="SerialFrameComm"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="65:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc" name="putData" provided="0" ref="0x2b610711d4d0">
        <documentation loc="58:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc">
          <short>
  Used by the upper layer to request that a byte of data be sent
  over serial.</short>
          <long>
  Used by the upper layer to request that a byte of data be sent
  over serial.
  @param data The byte to be sent
  @return Returns an error_t code that indicates if the lower layer
  has accepted the byte for sending (SUCCESS) or not (FAIL).
</long>
        </documentation>
        <interfacedef-ref nicename="SerialFrameComm" qname="SerialFrameComm"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b610586f980"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b6104f08160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="65:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc" name="data" ref="0x2b610711d250">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b6104f08160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="100:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc" name="putDone" provided="0" ref="0x2b6107119350">
        <documentation loc="96:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc">
          <short>
 Split-phase event to signal when the lower layer has finished writing
 the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref nicename="SerialFrameComm" qname="SerialFrameComm"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" loc="85:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc" name="delimiterReceived" provided="0" ref="0x2b610711a020">
        <documentation loc="81:/opt/tinyos-release-tinyos-2_1_2//tos/lib/serial/SerialFrameComm.nc">
          <short>
 Signals the upper layer that an inter-frame delimiter has been 
 received from the serial connection.</short>
          <long>
 Signals the upper layer that an inter-frame delimiter has been 
 received from the serial connection.
</long>
        </documentation>
        <interfacedef-ref nicename="SerialFrameComm" qname="SerialFrameComm"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>